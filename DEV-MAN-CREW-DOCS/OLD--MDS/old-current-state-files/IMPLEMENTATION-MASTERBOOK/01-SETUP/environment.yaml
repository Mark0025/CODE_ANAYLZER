# Environment setup for CODE_ANALYZER
update_plan:
  name: "Setup Environment"
  description: "Initialize development environment"
  priority: "HIGH"
  
  phases:
    1_create_directories:
      description: "Create required directories"
      changes:
        - type: "create_directories"
          targets:
            - "code_analyzer/web"
            - "code_analyzer/integrations/fabric"
            - "code_analyzer/monitoring/templates"
            - "tests/integration"
            - "tests/unit"
    
    2_setup_logging:
      description: "Configure logging"
      changes:
        - type: "create_module"
          target: "code_analyzer/utils/logging.py"
          content: |
            """Logging configuration for CODE_ANALYZER."""
            import sys
            from pathlib import Path
            from loguru import logger
            
            def setup_logging(log_file: str = None):
                """Configure logging with file and console output."""
                # Remove default handler
                logger.remove()
                
                # Add console handler with colors
                logger.add(
                    sys.stdout,
                    colorize=True,
                    format="<green>{time:YYYY-MM-DD HH:mm:ss}</green> | "
                           "<level>{level: <8}</level> | "
                           "<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - "
                           "<level>{message}</level>"
                )
                
                # Add file handler if specified
                if log_file:
                    log_path = Path(log_file)
                    log_path.parent.mkdir(parents=True, exist_ok=True)
                    logger.add(
                        log_file,
                        rotation="1 day",
                        retention="1 week",
                        compression="zip"
                    )
                
                return logger 